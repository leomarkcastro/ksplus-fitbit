// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String         @id @default(cuid())
  name             String         @default("")
  lastName         String         @default("")
  email            String         @unique @default("")
  adminPassword    String?
  localAuth        UserLocalAuth? @relation("User_localAuth", fields: [localAuthId], references: [id])
  localAuthId      String?        @unique @map("localAuth")
  avatar_filesize  Int?
  avatar_extension String?
  avatar_width     Int?
  avatar_height    Int?
  avatar_id        String?
  role             UserRoleType?  @default(user)
  groups           Group[]        @relation("Group_members")
  posts            Post[]         @relation("Post_author")
  createdAt        DateTime?      @default(now())
}

model UserLocalAuth {
  id                 String    @id @default(cuid())
  password           String    @default("")
  twoFaEmail         String    @default("")
  twoFaEmailSecret   String    @default("")
  twoFaEmailLastSent DateTime?
  user               User?     @relation("User_localAuth")
}

model Group {
  id      String @id @default(cuid())
  name    String @default("")
  members User[] @relation("Group_members")
}

model Post {
  id                   String    @id @default(cuid())
  title                String    @default("")
  content              String    @default("")
  tags                 PostTag[] @relation("Post_tags")
  coverImage_filesize  Int?
  coverImage_extension String?
  coverImage_width     Int?
  coverImage_height    Int?
  coverImage_id        String?
  author               User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId             String?   @map("author")

  @@index([authorId])
}

model PostTag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

enum UserRoleType {
  dev
  admin
  user
}
